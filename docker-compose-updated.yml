version: '3.8'  # Specify the version of the Compose file format

services:

  # Database
  bookstore-mysql-db:
    image: mysql:5.7
    command: [ "--max_connections=3000000" ]
    restart: always
    environment:
      MYSQL_DATABASE: "bookstore_db"
      MYSQL_USER: "bookstoreDBA"
      MYSQL_PASSWORD: "PaSSworD"
      MYSQL_ROOT_PASSWORD: "r00tPaSSworD"
    volumes:
      - bookstore-db-volume:/var/lib/mysql
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-mysql-db
    ports:
      - target: 3306    # Port inside the container
        published: 3306  # Port exposed on the host
        protocol: tcp
        mode: host       # Host mode
    deploy:
      placement:
        constraints:
          - node.hostname == gl6

  # Service Discovery
  bookstore-consul-discovery:
    image: hashicorp/consul
    restart: always
    ports:
      - target: 8500
        published: 8500
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-consul-discovery
    deploy:
      placement:
        constraints: [node.role == manager]

  # API Gateway
  bookstore-zuul-api-gateway-server:
    build:
      context: ./bookstore-api-gateway-service
      args:
        JAR_FILE: bookstore-api-gateway-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-zuul-api-gateway-server
    ports:
      - target: 8765
        published: 8765
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-zuul-api-gateway-server
    environment:
      - SERVER_PORT=8765
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  # Account Service
  bookstore-account-service:
    build:
      context: ./bookstore-account-service
      args:
        JAR_FILE: bookstore-account-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-account-service
    ports:
      - target: 4001
        published: 4001
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-account-service
    environment:
      - SERVER_PORT=4001
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: global
      labels:
        swarm.autoscaler: 'true'
        swarm.autoscaler.maximum: '4'
        swarm.autoscaler.minimum: '1'

  # Billing Service
  bookstore-billing-service:
    build:
      context: ./bookstore-billing-service
      args:
        JAR_FILE: bookstore-billing-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-billing-service
    ports:
      - target: 5001
        published: 5001
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-billing-service
    environment:
      - SERVER_PORT=5001
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: global
      labels:
        swarm.autoscaler: 'true'
        swarm.autoscaler.maximum: '4'
        swarm.autoscaler.minimum: '1'

  # Catalog Service
  bookstore-catalog-service:
    build:
      context: ./bookstore-catalog-service
      args:
        JAR_FILE: bookstore-catalog-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-catalog-service
    ports:
      - target: 6001
        published: 6001
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-catalog-service
    environment:
      - SERVER_PORT=6001
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: global
      labels:
        swarm.autoscaler: 'true'
        swarm.autoscaler.maximum: '4'
        swarm.autoscaler.minimum: '1'

  # Order Service
  bookstore-order-service:
    build:
      context: ./bookstore-order-service
      args:
        JAR_FILE: bookstore-order-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-order-service
    ports:
      - target: 7001
        published: 7001
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-order-service
    environment:
      - SERVER_PORT=7001
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: global
      labels:
        swarm.autoscaler: 'true'
        swarm.autoscaler.maximum: '4'
        swarm.autoscaler.minimum: '1'

  # Payment Service
  bookstore-payment-service:
    build:
      context: ./bookstore-payment-service
      args:
        JAR_FILE: bookstore-payment-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-payment-service
    ports:
      - target: 8001
        published: 8001
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-payment-service
    environment:
      - SERVER_PORT=8001
      - ZIPKIN_HOST=145.108.225.17:9411
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: global
      labels:
        swarm.autoscaler: 'true'
        swarm.autoscaler.maximum: '4'
        swarm.autoscaler.minimum: '1'

  # Tracing Service
  bookstore-zipkin:
    image: openzipkin/zipkin
    environment:
      - JAVA_OPTS=-Xms512m -Xmx10g
    ports:
      - target: 9411
        published: 9411
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-zipkin
    deploy:
      placement:
        constraints:
          - node.hostname == gl6

  # Monitoring using TICK stack
  bookstore-telegraf:
    build:
      context: ./bookstore-telegraph
      dockerfile: Dockerfile
    image: docker.bookstore.com:5000/bookstore-telegraf
    user: telegraf:999
    environment:
      HOSTNAME: "bookstore-telegraf"
    ports:
      - target: 8125
        published: 8125
        protocol: udp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-telegraf
    deploy:
      replicas: 3

  # InfluxDB
  bookstore-influxdb:
    image: influxdb:1.7.6
    volumes:
      - bookstore-influxdb-volume:/var/lib/influxdb
    ports:
      - target: 8086
        published: 8086
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-influxdb
    deploy:
      placement:
        constraints:
          - node.hostname == gl5    

  # Chronograf
  bookstore-chronograf:
    image: chronograf:1.7.3
    environment:
      INFLUXDB_URL: http://145.108.225.16:8086
      KAPACITOR_URL: http://145.108.225.17:9092
    volumes:
      - bookstore-chronograf-volume:/var/lib/chronograf
    ports:
      - target: 8888
        published: 8888
        protocol: tcp
        mode: host
    restart: always
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-chronograf

  # Kapacitor
  bookstore-kapacitor:
    image: kapacitor
    environment:
      KAPACITOR_HOSTNAME: bookstore-kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://145.108.225.16:8086
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
    networks:
      bookstore-app-network_ishas:
        aliases:
          - bookstore-kapacitor
    deploy:
      placement:
        constraints:
          - node.hostname == gl6

volumes:
  bookstore-db-volume:
  bookstore-graphana-volume:
  bookstore-telegraph-volume:
  bookstore-influxdb-volume:
  bookstore-chronograf-volume:

networks:
  bookstore-app-network_ishas:
    external: true